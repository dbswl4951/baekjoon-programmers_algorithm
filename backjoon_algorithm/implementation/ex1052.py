#물병
'''
N=2: [1, 1] -> [2] 한병
N=3: [1, 1, 1] -> [2, 1] 두병
N=4: [1, 1, 1, 1] -> [2, 2] -> [4] 한병
N=5: [1, 1, 1, 1, 1] -> [2, 2, 1] -> [4, 1] 두병
N=6: [1, 1, 1, 1, 1, 1] -> [2, 2, 2] -> [4, 2] 두병
N=7: [1, 1, 1, 1, 1, 1, 1] -> [2, 2, 2, 1] -> [4, 2, 1] 세병
=> N이 2의 n제곱승일 경우 물병 한병으로 합칠 수 있음
N의 값을 ++해가면서 필요한 물병의 개수가 K개를 넘지 않는 최댓값을 찾자

예를들어 n=5,k=1이라고 하자
num : 합쳐야 할 물병 개수, a: 합쳐진 물병 개수, b: 합칠 수 없는 물병 개수
1) num=5 : [1,1,1,1,1] => [2,2,1]
    a=2, b=1
2) 합쳐진 물병에 대해서 다시 합치기
    num=2 : [2,2] => [4]
    a=1, b=0
3) 합쳐진 물병에 대해서 다시 합치기
    num=1 : [4] => [4] (더이상 합치지 X)
    a=0, b=1
'''
import sys

# 합쳐지는 물병은 계속 합치고, 합쳐지지 못한 물병이 있을 경우 물병 1개씩 구입
def check(num):
    cnt=0   # 추가 한 물병 개수
    while True:
        # a : 합쳐진 물병 개수, b: 합쳐지지 못한 물병 개수
        a,b=divmod(num,2)
        cnt+=b
        num = a
        # 더이상 합쳐진게 없을 때 break
        if a==0: break
    return cnt

n,k=map(int,sys.stdin.readline().split())
if k>=n: print(0)
else:
    num=n      # 총 물병 개수
    while True:
        if check(num)<=k:
            print(num-n)
            break
        else: num+=1